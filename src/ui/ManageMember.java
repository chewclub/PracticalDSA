/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import control.ControlMember;
import da.MemberDA;
import domain.Member;
import da.MemberTable;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.*;
import java.util.regex.PatternSyntaxException;
/**
 *
 * @author win7
 */
public class ManageMember extends javax.swing.JFrame {
    private MemberTable tableModel2;
    private TableRowSorter<TableModel> sorter;
    /**
     * Creates new form ManageMember
     */
    private ButtonGroup group;
    ImageIcon icon = new ImageIcon(getClass().getResource("/images/icon.png"));
    ImageIcon saveicon = new ImageIcon(getClass().getResource("/images/saveicon.png"));;
    
    public ManageMember() {
        initTable1();  
        initComponents();
        setSize(670, 680);
        setLocationRelativeTo(null);
    }
 private void initTable1(){
        try{
         tableModel2 = new MemberTable();
         jTable1 = new JTable(tableModel2);
         sorter = new TableRowSorter<TableModel>(jTable1.getModel());
            jTable1.setRowSorter(sorter);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Staff");
        setUndecorated(true);

        jPanel1.setToolTipText("");
        jPanel1.setMinimumSize(new java.awt.Dimension(690, 680));
        jPanel1.setPreferredSize(new java.awt.Dimension(690, 680));
        jPanel1.setLayout(null);

        Back.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bgtitlemember.fw.png"))); // NOI18N
        Back.setOpaque(false);
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        jPanel1.add(Back);
        Back.setBounds(20, 0, 620, 99);

        jScrollPane1.setOpaque(false);

        jTable1.setModel(tableModel2);
        jTable1.setGridColor(new java.awt.Color(102, 102, 255));
        jTable1.setOpaque(false);
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(63, 153, 535, 140);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        jPanel2.setOpaque(false);

        jTextField2.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Name          :");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Member ID :");

        jButton2.setMnemonic('S');
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField3.setText("M1001");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("IC                :");

        jButton1.setMnemonic('C');
        jButton1.setText("Check");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Contact      : +60  ");

        jTextField4.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Gender       :");

        jTextField5.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(25, 25, 25))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(61, 340, 390, 307);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jPanel3.setOpaque(false);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setMnemonic('D');
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setMnemonic('E');
        jButton6.setText("Edit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setMnemonic('A');
        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(480, 340, 140, 220);

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setMnemonic('R');
        jButton8.setText("REFRESH");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(488, 299, 110, 23);

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton9.setMnemonic('B');
        jButton9.setText("BACK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(63, 299, 90, 23);

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField6);
        jTextField6.setBounds(160, 110, 240, 30);

        jButton3.setMnemonic('H');
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(420, 110, 90, 30);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bestdoraemonBG.png"))); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(-17, -2, 690, 690);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        String memberId = jTextField3.getText();
        
        ControlMember member = new ControlMember();
        domain.Member mem = member.selectRecord(memberId);

        
            if (mem != null) {
         
               jTextField1.setText(mem.getMName());
               jTextField2.setText(mem.getMIC());
               jTextField4.setText(String.valueOf(mem.getMContact()));
               jTextField5.setText(mem.getMGender());
               

            } else {
                JOptionPane.showMessageDialog(null, "No records found in database.", "NO RECORDS", JOptionPane.ERROR_MESSAGE);
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jTextField6.setText("");
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jTextField6.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
       //String memberId = jTextField3.getText();
        
        ControlMember member = new ControlMember();
        //domain.Member mem = member.selectRecord(memberId);
   
                  int option=0;
                  String gender=null;
                  String nameMember;
                  String ic=null;
                  String pass;
                  String gend=null;
                  int genderInt =0;
                  int contact=0;
                  
                  String memberId="";
                  String latest = member.getlast();
                  for(int x=1;x<5;x++){
                      memberId += latest.charAt(x);
                  }
                  int memID = Integer.parseInt(memberId)+1;
                  memberId = "M" + String.format("%d", memID);
                  
                  JOptionPane.showMessageDialog(null,"    Your new member ID is "+ memberId +"              ", "New Member ID", JOptionPane.INFORMATION_MESSAGE, icon);

            do{  
                   nameMember = JOptionPane.showInputDialog("Enter Name :");

                if(nameMember != null)
                {
                    if(/*nameStaff == null ||*/ nameMember.isEmpty() || !nameMember.matches("[A-Z a-z]*")){
                        JOptionPane.showMessageDialog(null, "Please fill up Member Name !\n( Must in Character Format ) ", "Invalid Add", JOptionPane.ERROR_MESSAGE);   
                        option=1;
                    }
                    else{
                        option=2;
                    }   
                }
                else{
                    new ManageMember();
                    option=0;
                }
            }while(option==1);

            
    if(option==2){
        option=0;
            
        do{     
            try{     
                  ic = JOptionPane.showInputDialog("Enter IC Number:");

                  
                }catch(NumberFormatException ex){
                 JOptionPane.showMessageDialog(null, "Please key in Number Format !\n( Can't be empty ! )", "Invalid Add", JOptionPane.ERROR_MESSAGE);
                 option=1;
            }
    
            if(ic!=null){
                        if(ic.length()>12 || ic.length()<12){
                                JOptionPane.showMessageDialog(null, "IC number can't exceed 12 digits", "Invalid Add", JOptionPane.ERROR_MESSAGE);
                                option=1; //loop again because choose out of position option
                        }
                        else{
                            option=0; //continue to next input dialog which option store is 0
                        }
            }
            else{
                new ManageMember();
                option=2;  //go for cancel button, stop adding.
            }  
        }while(option==1);
     
        if(option==0){
                do{
                    try{
                                option=0;
                                gend = JOptionPane.showInputDialog("Enter Gender :\n(1) Male\n(2) Female");
                                genderInt = Integer.parseInt(gend);
                                
                    }catch(NumberFormatException ex){
                            JOptionPane.showMessageDialog(null, "Please choose Number Format !\n( Can't be empty ! )", "Invalid Add", JOptionPane.ERROR_MESSAGE);
                            option=1;
                    }       
                        if(gend!=null){
                                if(genderInt>0 && genderInt<3){
                                        if(genderInt==1){
                                            gender = "Male";
                                        }
                                        else if(genderInt==2){
                                            gender = "Female";
                                        }

                                    do{
                                        try{
                                            option=0;
                                            contact = Integer.parseInt(JOptionPane.showInputDialog("Enter Contact :\n <+60>XXXXXXXXX "));

                                                if(String.valueOf(contact).length()>10 || String.valueOf(contact).length()<9){
                                                    JOptionPane.showMessageDialog(null, "Please key in Phone Number without any symbol and character !\nContact Number can't more than 10 digits !\n( Min: 9 digits )", "Invalid Add", JOptionPane.ERROR_MESSAGE);
                                                    option=1;
                                                }
                                                else{
                                                    Member memberperson = new Member(memberId,nameMember,ic,gender,contact);
                                                    member.addRecord(memberperson);
       
                                                    JOptionPane.showMessageDialog(null, "Thank you , Records saved", "Successfully Saved!" ,JOptionPane.INFORMATION_MESSAGE, saveicon);
                                                    option=0;
                                                }

                                        }catch(NumberFormatException ex){
                                             JOptionPane.showMessageDialog(null, "Please key in Phone Number without any symbol and character !\nContact Number can't more than 10 digits !\n( Min: 9 digits )", "Invalid Add", JOptionPane.ERROR_MESSAGE);
                                             option++;
                                        }catch(NullPointerException ex){
                                        }
                                    }while(option==1);           
                                }
                                else{
                                    option=1;
                                }
                        }
                        else{
                            option=0; 
                        }
                }while(option==1);
            } // when option is 0;
           // } // when option is 0;
           } // when option is 2.
        //} //big else
        
//}   //big IF
            
            
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
         String memberId = jTextField3.getText();
        
        ControlMember member = new ControlMember();
        domain.Member mem = member.selectRecord(memberId);
        try{
        
        if(jTextField1.getText().equals(mem.getMName())&&jTextField2.getText().equals(mem.getMIC())&&jTextField4.getText().equals(String.valueOf(mem.getMContact()))&&jTextField5.getText().equals(mem.getMGender())){
            
            String name;
            String ic=null;
            String pass;
            String gend=null;
            String gender=null;
            int contact=0;
            int option=0;
            int genderInt=0;
            
            Object[] options = {"Yes, edit name","No, remains!"};
            int n = JOptionPane.showOptionDialog(null,"Would you like to "+ "edit the NAME?","Update Name?",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[1]);
            
            if(n==0){
                do{
                        name=JOptionPane.showInputDialog("Enter Name :");
                        if(name != null)
                        {
                            if( name.isEmpty() || !name.matches("[A-Z a-z]*")){
                                JOptionPane.showMessageDialog(null, "Please fill up Staff Name !\n( Must in Character Format ) ", "Invalid Update", JOptionPane.ERROR_MESSAGE);   
                                option=1;
                            }
                            else{
                                option=2;
                            }   
                        }
                        else{
                            new ManageMember();
                            option=0;
                        }
                    }while(option==1);
                
            }
            else{
                 name=mem.getMName();
                 option=2;
            }
            
        if(option==2){
            Object[] options2 = {"Yes, edit ic number","No, remains!"};
            int p = JOptionPane.showOptionDialog(null,"Would you like to "+ "edit the IC NUMBER?","Update IC Number?",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,options2,options2[1]); 
             
            if(p==0){
                    option=0;
                do{
                    try{
                            ic = JOptionPane.showInputDialog("Enter IC Number:");
                            
                            }catch(NumberFormatException ex){
                                    JOptionPane.showMessageDialog(null, "Please key in Number Format !\n( Can't be empty ! )", "Invalid Update", JOptionPane.ERROR_MESSAGE);
                                    option=1;
                            }
    
                            if(ic!=null){
                                    if(ic.length()>12 || ic.length()<12){
                                            JOptionPane.showMessageDialog(null, "IC number can't exceed 12 digits", "Invalid Update", JOptionPane.ERROR_MESSAGE);
                                            option=1;//loop again because choose out of position option
                                        }
                                    else{
                                            option=0; 
                                    }
                            }
                            else{
                                    new ManageMember();
                                    option=2;  //go for cancel button, stop adding.
                            }  
                        }while(option==1);
            }
            else{
                ic=mem.getMIC();
                option=0;
            }
            
            
        if(option==0){      //option 0 which is next input dialog  
            Object[] options4 = {"Yes, edit gender","No, remains!"};
            int r = JOptionPane.showOptionDialog(null,"Would you like to "+ "edit the GENDER?","Update Gender?",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,options4,options4[1]); 
             
            if(r==0){
                do{
                    try{
                                gend=JOptionPane.showInputDialog("Enter Gender :\n(1) Male\n(2) Female");
                                genderInt = Integer.parseInt(gend);
                                
                    }catch(NumberFormatException ex){
                            JOptionPane.showMessageDialog(null, "Please choose Number Format !\n( Can't be empty ! )", "Invalid Update", JOptionPane.ERROR_MESSAGE);
                            option=1;
                    }       
                        if(gend!=null){
                                if(genderInt>0 && genderInt<3){
                                        if(genderInt==1){
                                            gender = "Male";
                                            option=3;
                                        }
                                        else if(genderInt==2){
                                            gender = "Female";
                                            option=3;
                                        }
                                }
                                else{
                                    option=1;
                                }
                        }
                        else{
                            option=0; 
                        }
                }while(option==1);
            }
            else{
                    gender=mem.getMGender();
                    option=3;
            }
            
        if(option==3){    
            Object[] options5 = {"Yes, edit contact","No, remains!"};
            int s = JOptionPane.showOptionDialog(null,"Would you like to "+ "edit the CONTACT NUMBER?","Update Contact No?",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,options5,options5[1]); 
            
            if(s==0){
                do{
                                        try{
                                            option=0;
                                            contact = Integer.parseInt(JOptionPane.showInputDialog("Enter Contact :\n <+60>XXXXXXXXX "));

                                                if(String.valueOf(contact).length()>10 || String.valueOf(contact).length()<9){
                                                    JOptionPane.showMessageDialog(null, "Please key in Phone Number without any symbol and character !\nContact Number can't more than 10 digits !\n( Min: 9 digits )", "Invalid Update", JOptionPane.ERROR_MESSAGE);
                                                    option=1;
                                                }
                                                else{
                                                    option=4;
                                                }

                                        }catch(NumberFormatException ex){
                                             JOptionPane.showMessageDialog(null, "Please key in Phone Number without any symbol and character !\nContact Number can't more than 10 digits !\n( Min: 9 digits )", "Invalid Update", JOptionPane.ERROR_MESSAGE);
                                             option++;
                                        }
    
                    }while(option==1);
            }
            else{
                contact=mem.getMContact();
                option=4;
            }
            
             
            if(option==4){ 
               Member memberperson = new Member(memberId,name,ic,gender,contact);
               member.updateRecord(memberperson);

                JOptionPane.showMessageDialog(null, "Thank you , Records updated", "Successfully Saved!" ,JOptionPane.INFORMATION_MESSAGE, saveicon);
                jTextField1.setText(name);
                jTextField2.setText(ic);
                jTextField4.setText(String.format("%s",contact));
                jTextField5.setText(gender);
            } //option is 4.
            } //option is 3;
            } //option is 0;
            //}
          }
        }
        else
        {
             JOptionPane.showMessageDialog(null, "Please check ID First");
        }
         }catch(NullPointerException ex){
             JOptionPane.showMessageDialog(null,"Invalid Member ID !");     
        }
            
// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

            String memberId = jTextField3.getText();
        
        ControlMember member = new ControlMember();
        
        domain.Member mem = member.selectRecord(memberId);
            
        
            if (mem == null) {
                JOptionPane.showMessageDialog(null, "No records found in database");    
            } 
            else {
                
                if(jTextField1.getText().equals(mem.getMName())&&jTextField2.getText().equals(mem.getMIC())&&jTextField4.getText().equals(String.valueOf(mem.getMContact()))&&jTextField5.getText().equals(mem.getMGender())){
                
                        member.deleteRecord(mem);
                
                         //JOptionPane.showMessageDialog(null,"Record successfully Deleted");
                         jTextField1.setText("");
                         jTextField2.setText("");
                         jTextField3.setText("");
                         jTextField4.setText("");
                         jTextField5.setText("");
                }
                else{
                        JOptionPane.showMessageDialog(null, "Please check ID First");
                }
            }
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here;
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        dispose();
        new ManageMember().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        dispose();
        new ManageMember();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{ 
            
            String query= "SELECT * FROM MEMBER";
            String search = (jTextField6.getText());
             search.toUpperCase();
            if(!search.equals(""))  
                query = "SELECT * FROM MEMBER WHERE MID = '"+ search+ "'";
                
            tableModel2.setQuery(query);
            
       }catch(IllegalArgumentException ex){
                    if(jTextField6.getText().equals(""))
                    {
                        JOptionPane.showMessageDialog(null, "Member ID can't be empty !", "INVALID TYPE", JOptionPane.ERROR_MESSAGE);
                        jTextField6.setText("");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "ID Does Not Exits", "ID NOT FOUND", JOptionPane.ERROR_MESSAGE);
                        jTextField6.setText("");
                    }
       } catch (IllegalStateException ex) {
            Logger.getLogger(ManageMember.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageMember.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
        String text = jTextField6.getText();
            if (text.length() == 0) {
                sorter.setRowFilter(null);
            } else {
                try {
                    sorter.setRowFilter(RowFilter.regexFilter(text));
                } catch (PatternSyntaxException pse) {
                    JOptionPane.showMessageDialog(null, "Bad regex pattern", "Bad regex pattern", JOptionPane.ERROR_MESSAGE);
                }
                
            }
    }//GEN-LAST:event_jTextField6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageMember().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
